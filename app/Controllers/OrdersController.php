<?php

namespace App\Controllers;

use App\Models\ExistingCustomerModel;
use App\Models\CustomerModel;
use App\Models\UserModel;
use App\Models\ProductModel;
use App\Models\OrderModel;
use App\Models\ProductOrdersModel;
use App\Models\NotifyModel;




class OrdersController extends BaseController
{
    protected $customerModel;
    protected $existingCustomers;
    protected $userModel;
    protected $productModel;
    protected $orderModel;
    protected $productOrderRelation;
    protected $notifyModel;

    public function __construct()
    {
        $this->existingCustomers = new ExistingCustomerModel();
        $this->CustomerModel = new CustomerModel();
        $this->userModel = new UserModel();
        $this->productModel = new ProductModel();
        $this->orderModel = new OrderModel();
        $this->productOrderRelation = new ProductOrdersModel();
        $this->notifyModel = new NotifyModel();
       
    }
    public function index()
    {
          $agent_id =session()->get('userId');
          $data['order_data']=$this->orderModel->orderDetails($agent_id);
          // print_r($data['order_data']);
          // exit;
          $this->globalVariable=$this->notifyModel->getNotification();
          $data['global']=$this->globalVariable;
          $data['notifications']=$this->notifyModel->notification_details();
        return view('Dashboard/order',$data);
    }
    public function addOrders()
    {
          $uri = current_url(true);
          $id=$uri->getSegment(3); 

          $data['customers_details']=$this->existingCustomers->where('customer_id',$id)->get()->getRowArray();
          $data['products']=$this->productModel->findAll();

           $order_id =$this->orderModel->AutoGeneratedOrderId();
           $data['Order_id']=$order_id['order_id'];
           $data['oor_id']=$order_id['id'];  
           $this->globalVariable=$this->notifyModel->getNotification();
           $data['global']=$this->globalVariable; 
           $data['notifications']=$this->notifyModel->notification_details();
         return view('Dashboard/add-order',$data);
    }
       // For dropdown
    public function getProduct()
    {
        $query = $this->request->getVar('query');
        $getResult = $this->productModel->getproductName($query);
        $output = '<ul class="list-group">';
        // print_r($getResult);
        if (!empty($getResult)) {
            foreach ($getResult as $row) {
                $output .= '<li class="list-group-item" id="product'.$row['product_code'].'">' . $row['product_name'] .'</li>';
               
            }
        }
        else{
            $output.='<li class="list-group-item read-only"> No match found </li>'; 
          }
        $output .= '</ul>';
        echo $output;
    }
     //For productCode dropdown in add order view
    public function getPrdCode()
    {
        $query = $this->request->getVar('query');
        $getResult = $this->productModel->getprodcode($query);
        $output = '<ul class="list-group">';
        // print_r($getResult);
        if (!empty($getResult)) {
            foreach ($getResult as $row) {
                $output .= '<li class="list-group-item" id="productcode'.$row['product_code'].'">' . $row['product_code'] . '</li>';
              
               
            }
        }
        else{
          $output.='<li class="list-group-item read-only"> No match found </li>'; 
        }
        $output .= '</ul>';
        echo $output;

    }
    public function GetPrddetails()
    {
        $postData = $this->request->getVar('id');
        $rowCount = $this->request->getVar('count');
       
        $prd_code = $this->request->getVar('prdcode');
          if(!empty($postData))
          {
        $getResult = $this->productModel->where('product_name',$postData)->get()->getRowArray();
          }
          else if(!empty($prd_code))
          {
            $getResult = $this->productModel->where('product_code',$prd_code)->get()->getRowArray();
          }
           $output='';      
    
        if (!empty($getResult)) {
                  
                $output .= '<tr>
                     <td><input type="checkbox" name="record"></td>
                    <td title="'.$getResult['ingredients'].'">'.$getResult['product_name'].'</td>
                    <input type="hidden" name="product_name[]" value="'.$getResult['product_name'].'"/>


                    <input type="hidden" name="product_price[]" class="product_price" value="'.$getResult['product_price'].'" id="product_price'.$rowCount.'"/>
                    
                    <td>'.$getResult['product_code'].'</td>
                    <td>'.$getResult['product_price'].'</td>
                    <td> 0.00 </td>
                     <input type="hidden" name="rowCount[]" class="rowCountorderQty'.$rowCount.'" value="'.$rowCount.'"/>
                    <td> <input type="number" name="orderQty[]" class="input-xsmall orderQty" value="1" id="orderQty'.$rowCount.'"> </td>
                   <td> 0.00 </td>
                   <td id="prdtotal'.$rowCount.'" >'.$getResult['product_price'].'</td></tr>';
            
        }
          return $output;
      

    } 
     public function processOrder()
     {
     
      if ($this->request->isAJAX()) {
      $prd_details=$this->request->getVar('postData');
      $ord_details=$this->request->getVar('ord_data');
      $notify=[];
     //var_dump($query);
     $ord_prd_arr= json_decode($prd_details,1);
     $ord_arr= json_decode($ord_details,1);
    //  print_r($ord_arr);
    $notify=[
      'notify_to'=>23,
      'note_from'=>$ord_arr[0]['order_agent_id'],
       'oor_id'=> $ord_prd_arr[0]['order_id']
    ];
    //  print_r($ord_prd_arr);
    $this->orderModel->insert($ord_arr[0]);
    $this->productOrderRelation->insertBatch($ord_prd_arr);//inserts different prd in the order placed
    $this->notifyModel->insert($notify);

    echo json_encode(base_url('order-details'));
     }
    }

    public function orderDetailView()
    {
      $ord_id=$this->request->getVar('orderId');
      $ord_data = json_encode(array('order' => ($this->orderModel->orderModelView($ord_id)), 'products' => ($this->productOrderRelation->getOrderedProd($ord_id))));
     echo $ord_data;

    }
    public function updateOrder($id)
    {
      
     $data['order']=$this->orderModel->orderModelView($id);
     $data['products']=$this->productOrderRelation->getOrderedProd($id);
     $this->globalVariable=$this->notifyModel->getNotification();
        $data['global']=$this->globalVariable;
        $data['notifications']=$this->notifyModel->notification_details();
       return view('Dashboard/edit_orders',$data);
    }
}